{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-08-15T10:44:59.658Z",
    "end": "2025-08-15T10:45:11.240Z",
    "duration": 11582,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fee37682-ef4f-4a90-b519-db19fe086269",
      "title": "",
      "fullFile": "cypress\\e2e\\component\\dragAndDrop.cy.js",
      "file": "cypress\\e2e\\component\\dragAndDrop.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e95814ea-9dd8-45d7-b426-cf11c4fdd939",
          "title": "Drag and drop",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "drags the box manually with mouse events",
              "fullTitle": "Drag and drop drags the box manually with mouse events",
              "timedOut": null,
              "duration": 7776,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://demoqa.com/dragabble');\ncy.get('#dragBox').should('be.visible').then($el => {\n  const el = $el[0];\n  const rect = el.getBoundingClientRect();\n  // Starting position\n  cy.wrap($el).trigger('mousedown', {\n    button: 0,\n    clientX: rect.x + rect.width / 2,\n    clientY: rect.y + rect.height / 2,\n    force: true\n  });\n  // Move to new position\n  cy.get('body').trigger('mousemove', {\n    button: 0,\n    clientX: rect.x + rect.width / 2 + 150,\n    clientY: rect.y + rect.height / 2 + 100,\n    force: true\n  });\n  // Release mouse\n  cy.get('body').trigger('mouseup', {\n    force: true\n  });\n});\n// Verify the transform changed\ncy.get('#dragBox').should($el => {\n  const transform = $el.css('transform');\n  expect(transform).not.to.equal('none');\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected 'none' to not equal 'none'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected 'none' to not equal 'none'\n    at Context.eval (webpack://cypress_ui_automation/./cypress/e2e/component/dragAndDrop.cy.js:55:31)\n    at <unknown> (https://demoqa.com/__cypress/runner/cypress_runner.js:120373:17)\n    at tryCatcher (https://demoqa.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://demoqa.com/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.shouldFnWithCallback (https://demoqa.com/__cypress/runner/cypress_runner.js:120370:66)\n    at Context.shouldFn (https://demoqa.com/__cypress/runner/cypress_runner.js:120413:37)",
                "diff": ""
              },
              "uuid": "9e1af31c-4ee2-4b29-ba8a-3ef8be36d3f4",
              "parentUUID": "e95814ea-9dd8-45d7-b426-cf11c4fdd939",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9e1af31c-4ee2-4b29-ba8a-3ef8be36d3f4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7776,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "embeddedScreenshots": true
      },
      "version": "6.2.0"
    }
  }
}